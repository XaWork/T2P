// Generated by Dagger (https://dagger.dev).
package me.taste2plate.app.customer.ui.membership;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import me.taste2plate.app.customer.repo.ProductRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyPlanViewModel_Factory implements Factory<MyPlanViewModel> {
  private final Provider<ProductRepository> productRepositoryProvider;

  public MyPlanViewModel_Factory(Provider<ProductRepository> productRepositoryProvider) {
    this.productRepositoryProvider = productRepositoryProvider;
  }

  @Override
  public MyPlanViewModel get() {
    return newInstance(productRepositoryProvider.get());
  }

  public static MyPlanViewModel_Factory create(
      Provider<ProductRepository> productRepositoryProvider) {
    return new MyPlanViewModel_Factory(productRepositoryProvider);
  }

  public static MyPlanViewModel newInstance(ProductRepository productRepository) {
    return new MyPlanViewModel(productRepository);
  }
}
